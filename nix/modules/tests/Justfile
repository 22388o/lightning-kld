# Debug nixos test interactively, i.e. `just debug-test kuutamod`
debug-test TEST:
  nix build ".#checks.x86_64-linux.{{TEST}}.driver" -L
  # Now type start_all() to launch all virtual machines
  # Type server.shell_interact() to get a shell
  PYTHONBREAKPOINT=remote_pdb.set_trace REMOTE_PDB_HOST=127.0.0.1 REMOTE_PDB_PORT=4444 ./result/bin/nixos-test-driver

# Run a single test locally
run-test TEST:
  nix build ".#checks.x86_64-linux.{{TEST}}" -L

# Regenerate flake used during the test
generate-test-flake:
  rm -rf test-flake
  olddir=$(pwd); cd ../../../deploy && cargo run -- --config "$olddir/test-config.toml" generate-config "$olddir/test-flake"
  git add test-config.toml test-flake

# To attach to a breakpoint() call of debug-test
debug-repl:
   socat READLINE tcp:127.0.0.1:4444,forever,interval=2

# To attach to a machine.shell_interact("tcp:127.0.0.1:4444") call of debug-test
debug-shell:
   socat 'READLINE,PROMPT=$ ' tcp-listen:4444,reuseaddr

generate-cockroach-certs:
    #!/usr/bin/env bash
    set -xeuo pipefail

    rm -rf cockroach-certs
    cockroach cert create-ca --certs-dir=cockroach-certs --ca-key=cockroach-certs/ca.key
    for node in db1 db2 db3; do
      cockroach cert create-node --certs-dir=cockroach-certs --ca-key=cockroach-certs/ca.key $node localhost
      mv cockroach-certs/{node.crt,$node.crt}
      mv cockroach-certs/{node.key,$node.key}
    done
    cockroach cert create-client --certs-dir=cockroach-certs --ca-key=cockroach-certs/ca.key root
